Building DAG of jobs...
Using shell: /usr/bin/bash
Provided cores: 2
Rules claiming more threads will be scaled down.
Job stats:
job                   count
------------------  -------
Sparta_collapse           1
Sparta_endtime            1
all                       1
endCutNormalize_sh        1
endCutSparta_sh        1000
endCutStep1WIN1_sh        1
endCutStep1WIN2_sh        1
endCutStep2_sh            1
total                  1007

Select jobs to execute...

[Mon Jan 22 00:02:56 2024]
rule endCutSparta_sh:
    input: /home/ec2-user/nanoPAREUpdate/nanoPareVT1/endCutShuffleSpartaDone.txt, /home/ec2-user/nanoPAREUpdate/nanoPareVT1/endCutSpartaStartTimeDone.txt, /home/ec2-user/nanoPAREUpdate/nanoPareVT1/endMaskSpartaDone.txt, /home/ec2-user/meyersData/shuffleDirSparta_1/anno.mir.tas.542.shuffled.fa
    output: /home/ec2-user/meyersData/transcript_bedgraph_capmasked_sparta1/anno.mir.tas.542.shuffled.pred.sites.bed
    jobid: 558
    reason: Code has changed since last execution
    wildcards: miRShuffled=anno.mir.tas.542.shuffled
    threads: 2
    resources: tmpdir=/tmp

/home/ec2-user/nanoPAREUpdate/sPARTA/sPARTA.py:207: DeprecationWarning: Deprecated since Python 3.4 and slated for removal in Python 3.12; use importlib.util.find_spec() instead
  isNumpy     = importlib.find_loader('numpy')
/home/ec2-user/nanoPAREUpdate/sPARTA/sPARTA.py:215: DeprecationWarning: Deprecated since Python 3.4 and slated for removal in Python 3.12; use importlib.util.find_spec() instead
  isScipy     = importlib.find_loader('scipy')

#### Fn: Checking user #################################
Hello 'ec2-user' - Mon Jan 22 00:02:56 2024
You can seek help or report issues at: https://github.com/atulkakrana/sPARTA/issues

#### Fn: Check libraries and components ################
--numpy              : found
--scipy              : found

#### Fn: Check input files #############################
--miRNAFile          : found
--annoFile           : found
--genomeFile         : found

#### Fn: genomeReader ##################################
Caching genome fasta
Genome dict prepared for 1 chromosome/scaffolds

####Fn: gffParser ######################################
Entries in genome_info:285

#### Fn: extractFeatures ###############################
--Caching gene coords for chromosome: Ath_chr2 and strand: c
--Caching gene coords for chromosome: Ath_chr2 and strand: w
Number of coords in 'coords' list: 285

#### Fn: getFASTA ######################################
Fetching genes or intergenic regions
--Reading chromosome: Ath_chr2 and strand: c
--Reading chromosome: Ath_chr2 and strand: w
This is the extracted file: ./genomic_seq.fa
Fn - fragFASTA
+Purging older files

+Input FASTA size: 0.59MB**
--No fragmentation performed for file ['./genomic_seq.fa']
fileFrag time: 0.01
tarPred: H | tarScore: S | Uniq filter: True

Fragments to be indexed and used for TP: ['./genomic_seq.fa']

Fn: miRNAProcessor#########################################

Processing "/home/ec2-user/meyersData/shuffleDirSparta_1/anno.mir.tas.542.shuffled.fa" file to clean FASTA headers

Total number of miRNAs in given file: 587

***********Parallel instance of <function tarFind4 at 0x7fe4fa2b3490> is being executed*********

nprocPP:1

Settings:
  Output files: "./index/./genomic_seq.fa_index.*.bt2"
  Line rate: 6 (line is 64 bytes)
  Lines per side: 1 (side is 64 bytes)
  Offset rate: 4 (one in 16)
  FTable chars: 10
  Strings: unpacked
  Max bucket size: default
  Max bucket size, sqrt multiplier: default
  Max bucket size, len divisor: 4
  Difference-cover sample period: 1024
  Endianness: little
  Actual local endianness: little
  Sanity checking: disabled
  Assertions: disabled
  Random seed: 0
  Sizeofs: void*:8, int:4, long:8, size_t:8
Input files DNA, FASTA:
  ./genomic_seq.fa
Building a SMALL index
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
bmax according to bmaxDivN setting: 154405
Using parameters --bmax 115804 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 115804 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 2, merged 7; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 88230.6 (target: 115803)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 7
  Reserving size (115804) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 111602 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 111603 for bucket 1
Getting block 2 of 7
  Reserving size (115804) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 109254 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 109255 for bucket 2
Getting block 3 of 7
  Reserving size (115804) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 67268 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 67269 for bucket 3
Getting block 4 of 7
  Reserving size (115804) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 60750 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 60751 for bucket 4
Getting block 5 of 7
  Reserving size (115804) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 71372 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 71373 for bucket 5
Getting block 6 of 7
  Reserving size (115804) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 109314 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 109315 for bucket 6
Getting block 7 of 7
  Reserving size (115804) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 88054 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 88055 for bucket 7
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 175475
fchr[G]: 288127
fchr[T]: 414618
fchr[$]: 617620
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4407747 bytes to primary EBWT file: ./index/./genomic_seq.fa_index.1.bt2.tmp
Wrote 154412 bytes to secondary EBWT file: ./index/./genomic_seq.fa_index.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 617620
    bwtLen: 617621
    sz: 154405
    bwtSz: 154406
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 38602
    offsSz: 154408
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3217
    numLines: 3217
    ebwtTotLen: 205888
    ebwtTotSz: 205888
    color: 0
    reverse: 0
Total time for call to driver() for forward index: 00:00:00
Reading reference sizes
  Time reading reference sizes: 00:00:00
Calculating joined length
Writing header
Reserving space for joined string
Joining reference sequences
  Time to join reference sequences: 00:00:00
  Time to reverse reference sequence: 00:00:00
bmax according to bmaxDivN setting: 154405
Using parameters --bmax 115804 --dcv 1024
  Doing ahead-of-time memory usage test
  Passed!  Constructing with these parameters: --bmax 115804 --dcv 1024
Constructing suffix-array element generator
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 12 sample suffixes
Generating random suffixes
QSorting 12 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 12 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Avg bucket size: 77201.6 (target: 115803)
Converting suffix-array elements to index image
Allocating ftab, absorbFtab
Entering Ebwt loop
Getting block 1 of 8
  Reserving size (115804) for bucket 1
  Calculating Z arrays for bucket 1
  Entering block accumulator loop for bucket 1:
  bucket 1: 10%
  bucket 1: 20%
  bucket 1: 30%
  bucket 1: 40%
  bucket 1: 50%
  bucket 1: 60%
  bucket 1: 70%
  bucket 1: 80%
  bucket 1: 90%
  bucket 1: 100%
  Sorting block of length 68271 for bucket 1
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 68272 for bucket 1
Getting block 2 of 8
  Reserving size (115804) for bucket 2
  Calculating Z arrays for bucket 2
  Entering block accumulator loop for bucket 2:
  bucket 2: 10%
  bucket 2: 20%
  bucket 2: 30%
  bucket 2: 40%
  bucket 2: 50%
  bucket 2: 60%
  bucket 2: 70%
  bucket 2: 80%
  bucket 2: 90%
  bucket 2: 100%
  Sorting block of length 71198 for bucket 2
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 71199 for bucket 2
Getting block 3 of 8
  Reserving size (115804) for bucket 3
  Calculating Z arrays for bucket 3
  Entering block accumulator loop for bucket 3:
  bucket 3: 10%
  bucket 3: 20%
  bucket 3: 30%
  bucket 3: 40%
  bucket 3: 50%
  bucket 3: 60%
  bucket 3: 70%
  bucket 3: 80%
  bucket 3: 90%
  bucket 3: 100%
  Sorting block of length 61532 for bucket 3
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 61533 for bucket 3
Getting block 4 of 8
  Reserving size (115804) for bucket 4
  Calculating Z arrays for bucket 4
  Entering block accumulator loop for bucket 4:
  bucket 4: 10%
  bucket 4: 20%
  bucket 4: 30%
  bucket 4: 40%
  bucket 4: 50%
  bucket 4: 60%
  bucket 4: 70%
  bucket 4: 80%
  bucket 4: 90%
  bucket 4: 100%
  Sorting block of length 108006 for bucket 4
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 108007 for bucket 4
Getting block 5 of 8
  Reserving size (115804) for bucket 5
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 5:
  bucket 5: 10%
  bucket 5: 20%
  bucket 5: 30%
  bucket 5: 40%
  bucket 5: 50%
  bucket 5: 60%
  bucket 5: 70%
  bucket 5: 80%
  bucket 5: 90%
  bucket 5: 100%
  Sorting block of length 48422 for bucket 5
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 48423 for bucket 5
Getting block 6 of 8
  Reserving size (115804) for bucket 6
  Calculating Z arrays for bucket 6
  Entering block accumulator loop for bucket 6:
  bucket 6: 10%
  bucket 6: 20%
  bucket 6: 30%
  bucket 6: 40%
  bucket 6: 50%
  bucket 6: 60%
  bucket 6: 70%
  bucket 6: 80%
  bucket 6: 90%
  bucket 6: 100%
  Sorting block of length 98003 for bucket 6
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 98004 for bucket 6
Getting block 7 of 8
  Reserving size (115804) for bucket 7
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 7:
  bucket 7: 10%
  bucket 7: 20%
  bucket 7: 30%
  bucket 7: 40%
  bucket 7: 50%
  bucket 7: 60%
  bucket 7: 70%
  bucket 7: 80%
  bucket 7: 90%
  bucket 7: 100%
  Sorting block of length 56703 for bucket 7
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 56704 for bucket 7
Getting block 8 of 8
  Reserving size (115804) for bucket 8
  Calculating Z arrays for bucket 8
  Entering block accumulator loop for bucket 8:
  bucket 8: 10%
  bucket 8: 20%
  bucket 8: 30%
  bucket 8: 40%
  bucket 8: 50%
  bucket 8: 60%
  bucket 8: 70%
  bucket 8: 80%
  bucket 8: 90%
  bucket 8: 100%
  Sorting block of length 105478 for bucket 8
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 105479 for bucket 8
Exited Ebwt loop
fchr[A]: 0
fchr[C]: 175475
fchr[G]: 288127
fchr[T]: 414618
fchr[$]: 617620
Exiting Ebwt::buildToDisk()
Returning from initFromVector
Wrote 4407747 bytes to primary EBWT file: ./index/./genomic_seq.fa_index.rev.1.bt2.tmp
Wrote 154412 bytes to secondary EBWT file: ./index/./genomic_seq.fa_index.rev.2.bt2.tmp
Re-opening _in1 and _in2 as input streams
Returning from Ebwt constructor
Headers:
    len: 617620
    bwtLen: 617621
    sz: 154405
    bwtSz: 154406
    lineRate: 6
    offRate: 4
    offMask: 0xfffffff0
    ftabChars: 10
    eftabLen: 20
    eftabSz: 80
    ftabLen: 1048577
    ftabSz: 4194308
    offsLen: 38602
    offsSz: 154408
    lineSz: 64
    sideSz: 64
    sideBwtSz: 48
    sideBwtLen: 192
    numSides: 3217
    numLines: 3217
    ebwtTotLen: 205888
    ebwtTotSz: 205888
    color: 0
    reverse: 1
Total time for backward call to driver() for mirror index: 00:00:01
Renaming ./index/./genomic_seq.fa_index.3.bt2.tmp to ./index/./genomic_seq.fa_index.3.bt2
Renaming ./index/./genomic_seq.fa_index.4.bt2.tmp to ./index/./genomic_seq.fa_index.4.bt2
Renaming ./index/./genomic_seq.fa_index.1.bt2.tmp to ./index/./genomic_seq.fa_index.1.bt2
Renaming ./index/./genomic_seq.fa_index.2.bt2.tmp to ./index/./genomic_seq.fa_index.2.bt2
Renaming ./index/./genomic_seq.fa_index.rev.1.bt2.tmp to ./index/./genomic_seq.fa_index.rev.1.bt2
Renaming ./index/./genomic_seq.fa_index.rev.2.bt2.tmp to ./index/./genomic_seq.fa_index.rev.2.bt2
587 reads; of these:
  587 (100.00%) were unpaired; of these:
    237 (40.37%) aligned 0 times
    134 (22.83%) aligned exactly 1 time
    216 (36.80%) aligned >1 times
59.63% overall alignment rate
**Creating index of cDNA/genomic sequences:./index/./genomic_seq.fa_index
**
Predicting targets for frag:./genomic_seq.fa using index:./index/./genomic_seq.fa_index
You chose 'Heuristic mode' for target identification

 miRNAs mapped to Fragment: ./genomic_seq.fa
Target Prediction time: 6.18

****************************************
Target files: ['genomic_seq.targ']

Combining all the target prediction files for parsing and scoring

genomic_seq.targ

**Target prediction results are being generated**
File for parsing: './predicted/All.targs' in predicted folder

Total number of interactions from 'miRferno':1226 AND total interactions scored: 1202


Target prediction time is 6.28


These are index files:  ['genomic_seq.fa_index.1.bt2']


PARE processing run time is 0.0




Indexing and Prediction run time is 0.0


The complete 'sPARTA' run time is 10.31 seconds
The run has completed sucessfully.....CHEERS! - Exiting..

rm: cannot remove ‘/home/ec2-user/meyersData/transcript_bedgraph_capmasked_sparta1/anno.mir.tas.542.shuffled.fa_clean*’: No such file or directory
[Mon Jan 22 00:03:06 2024]
Error in rule endCutSparta_sh:
    jobid: 558
    input: /home/ec2-user/nanoPAREUpdate/nanoPareVT1/endCutShuffleSpartaDone.txt, /home/ec2-user/nanoPAREUpdate/nanoPareVT1/endCutSpartaStartTimeDone.txt, /home/ec2-user/nanoPAREUpdate/nanoPareVT1/endMaskSpartaDone.txt, /home/ec2-user/meyersData/shuffleDirSparta_1/anno.mir.tas.542.shuffled.fa
    output: /home/ec2-user/meyersData/transcript_bedgraph_capmasked_sparta1/anno.mir.tas.542.shuffled.pred.sites.bed
    shell:
        
		#execution of miRferno from the sPARTA program
		python3 /home/ec2-user/nanoPAREUpdate/sPARTA/sPARTA.py -genomeFile /home/ec2-user/nanoPAREUpdate/nanoPARE/resources/genome.fasta -annoType GFF -annoFile /home/ec2-user/nanoPAREUpdate/nanoPARE/resources/annotation.gff -genomeFeature 0 -miRNAFile /home/ec2-user/meyersData/shuffleDirSparta_1/anno.mir.tas.542.shuffled.fa -tarPred H -tarScore S --map2DD

		awk 'NR > 1' predicted/All.targs.parsed.csv | awk -F "," '{print $2,$3,$1,$6}' | awk -F " " '{split($2,a,"-"); print $1,a[1],a[2],$3,$4}' | sort -k1,1 -k2,2n | awk -F ' ' -v OFS="	" '{split($4,a,"_shuffled"); print $1,$2,$3,a[1],$5}' > /home/ec2-user/meyersData/transcript_bedgraph_capmasked_sparta1/anno.mir.tas.542.shuffled.pred.sites.bed
		rm /home/ec2-user/meyersData/transcript_bedgraph_capmasked_sparta1/anno.mir.tas.542.shuffled.fa_clean*
		
        (one of the commands exited with non-zero exit code; note that snakemake uses bash strict mode!)

Removing output files of failed job endCutSparta_sh since they might be corrupted:
/home/ec2-user/meyersData/transcript_bedgraph_capmasked_sparta1/anno.mir.tas.542.shuffled.pred.sites.bed
Shutting down, this might take some time.
Exiting because a job execution failed. Look above for error message
Complete log: .snakemake/log/2024-01-22T000251.719538.snakemake.log
